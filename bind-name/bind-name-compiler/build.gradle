apply plugin: "java-library"
apply plugin: "maven"

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation "com.google.auto.service:auto-service:$rootProject.ext.auto_service"
    implementation "com.java.lib:oil:$rootProject.ext.oil"
    implementation "com.squareup:javapoet:$rootProject.ext.javapoet"
}

javadoc {
    options.encoding = "UTF-8"
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

task configured {
    println project.name + ' configured enter.'
    if (gradle.startParameter.taskRequests && gradle.startParameter.taskRequests[0].args[0].endsWith('uploadArchives') && gradle.startParameter.taskRequests[0].args[0].startsWith(':bind-name:bind-name-compiler')) {
        println project.name + 'configured uploadArchives enter.'
        dependencies.add('compile', 'com.java.lib:bind-name-api:0.0.01')
        dependencies.add('compile', 'com.java.lib:processor:0.0.00')
    }
    else {
        if (findProject(':bind-name:bind-name-api')) {
            dependencies.add('compile', project(':bind-name:bind-name-api'))
        }
        else {
            dependencies.add('compile', 'com.java.lib:bind-name-api:0.0.01')
        }

        if (findProject(':processor')) {
            dependencies.add('compile', project(':processor'))
        }
        else {
            dependencies.add('compile', 'com.java.lib:processor:0.0.00')
        }
    }
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: project.property('deploy.release.url')) {
                authentication(userName: project.property('deploy.release.user.name'), password: project.property('deploy.release.user.password'))
            }
            snapshotRepository(url: project.property('deploy.snapshots.url')) {
                authentication(userName: project.property('deploy.snapshots.user.name'), password: project.property('deploy.snapshots.user.password'))
            }

            pom.project {
                name 'bind-name-compiler'
                packaging 'jar'
                description 'bind name to view annotation processor'
                version '0.0.02'
                groupId 'com.java.lib'

                developers {
                    developer {
                        id 'seelikes'
                        name 'liutiantian'
                        email 'seelikes@163.com'
                    }
                }
            }
        }
    }
}
